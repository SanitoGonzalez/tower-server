services:
  main:
    build: .
    environment:
      TOWER_DB_USER: tower
      TOWER_DB_PASSWORD_FILE: /run/secrets/db-password
      TOWER_DB_NAME: tower
    ports:
      - 30000:30000
    # volumes:
    #   - ./:/app
    secrets:
      - db-password
    depends_on:
      db:
        condition: service_healthy
        restart: true
      redis:
        condition: service_started

  auth:
    build: ./auth
    env_file:
      - ./auth/auth.env
    environment:
      TOWER_DB_USER: tower
      TOWER_DB_PASSWORD_FILE: /run/secrets/db-password
      TOWER_DB_NAME: tower
    ports:
      - 8000:8000
    # volumes:
    #   - ./auth/:/app
    secrets:
      - db-password
    depends_on:
      db:
        condition: service_healthy
        restart: true
      redis:
        condition: service_started

  db:
    image: postgres:alpine
    environment:
      POSTGRES_USER: tower
      POSTGRES_PASSWORD_FILE: /run/secrets/db-password
      POSTGRES_DB: tower
    ports:
      - 5432:5432
    volumes:
      - db-data:/var/lib/postgresql/data
    restart: unless-stopped
    secrets:
      - db-password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      start_period: 0s
      interval: 5s
      timeout: 5s
      retries: 5
  
  redis:
    image: redis:alpine

volumes:
  db-data:

secrets:
  db-password:
    file: config/secrets/db-password